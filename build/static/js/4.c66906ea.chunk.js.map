{"version":3,"sources":["checkout/modules/cart/actions.ts","checkout/components/AddToCardButton.tsx","checkout/containers/AddToCartContainer.tsx","checkout/modules/cart/selectors.ts","checkout/containers/CartIndicatorContainer.tsx","product/components/ProductDetail.tsx"],"names":["latency","duration","Promise","resolve","setTimeout","addToCart","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","stream","sku","quantity","cartItemMap","existingCartItem","newCartItem","newCartItemMap","wrap","_context","prev","next","keyBy","getValue","c","objectSpread","defineProperty","values","stop","_x","_x2","_x3","apply","this","arguments","AddToCartButton","_React$Component","_getPrototypeOf2","_this","classCallCheck","_len","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","concat","state","isAdding","onClick","setState","props","inherits","createClass","key","value","react_default","createElement","disabled","price","toFixed","React","Component","AddToCartContainer","_BaseContainer","cartStream","getAttribute","requestContext","parseFloat","ReactDOM","render","AddToCardButton_AddToCartButton","get","BaseContainer","tagName","customElements","define","CartIndicatorContainer","subscribeTo","totalQuantity","reduce","acc","ProductDetail","product","variants","find","v","variantSku","variant","getVariant","name","CartIndicatorContainer_CartIndicatorContainer","Fragment","AddToCartContainer_AddToCartContainer","data-sku","data-price"],"mappings":"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","file":"static/js/4.c66906ea.chunk.js","sourcesContent":["import { BehaviorSubject } from 'rxjs/internal/BehaviorSubject';\nimport keyBy from 'lodash/keyBy';\nimport values from 'lodash/values';\nimport { CartItem } from './types';\n\nconst latency = (duration: number) => new Promise(resolve => setTimeout(resolve, duration));\n\nexport const addToCart = async (stream: BehaviorSubject<CartItem[]>, sku: string, quantity: number) => {\n  await latency(300);\n\n  const cartItemMap = keyBy(stream.getValue(), c => c.sku);\n  const existingCartItem = cartItemMap[sku];\n  const newCartItem = (existingCartItem)\n    ? { ...existingCartItem, quantity: existingCartItem.quantity + quantity }\n    : { sku, quantity };\n  const newCartItemMap = { ...cartItemMap, [sku]: newCartItem };\n  stream.next(values(newCartItemMap));\n};\n","import React from 'react';\n\ninterface AddToCartButtonProps {\n  price: number;\n  addToCart: () => Promise<void>;\n}\n\ninterface AddToCartButtonState {\n  isAdding: boolean;\n}\n\nexport class AddToCartButton extends React.Component<AddToCartButtonProps, AddToCartButtonState> {\n  state = {\n    isAdding: false,\n  };\n\n  onClick = async () => {\n    this.setState({ isAdding: true });\n    await this.props.addToCart();\n    this.setState({ isAdding: false });\n  };\n\n  render() {\n    return (\n      <button\n        onClick={this.onClick}\n        disabled={this.state.isAdding}\n      >\n        Buy for ${this.props.price.toFixed(2)}\n      </button>\n    );\n  }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BaseContainer } from 'conductor/BaseContainer';\nimport { BehaviorSubject } from 'rxjs/internal/BehaviorSubject';\nimport { CartItem } from 'checkout/modules/cart/types';\nimport { requestContext } from 'conductor/contexts';\nimport { DependencyMap } from 'shared/config/DependencyMap';\nimport { addToCart } from 'checkout/modules/cart/actions';\nimport { AddToCartButton } from 'checkout/components/AddToCardButton';\n\nexport class AddToCartContainer extends BaseContainer {\n\n  static tagName = 'add-to-cart';\n  static get observedAttributes() { return [ 'data-sku', 'data-price' ]; }\n\n  cartStream?: BehaviorSubject<CartItem[]>;\n\n  onConnected() {\n    this.cartStream = requestContext<DependencyMap, 'cartStream'>(this, 'cartStream');\n  }\n\n  addToCart = async () => {\n    const sku = this.getAttribute('data-sku');\n    if (this.cartStream && sku) {\n      await addToCart(this.cartStream, sku, 1);\n    }\n  };\n\n  render() {\n    const price = parseFloat(this.getAttribute('data-price') || '');\n    ReactDOM.render(\n      <AddToCartButton\n        price={price}\n        addToCart={this.addToCart}\n      />,\n      this,\n    );\n  }\n}\ncustomElements.define(AddToCartContainer.tagName, AddToCartContainer);\n","import { CartItem } from './types';\n\nexport const getTotalQuantity = (cartItems: CartItem[]) => {\n  return cartItems.reduce((acc, c) => acc + c.quantity, 0);\n};\n","import React from 'react';\nimport { BaseContainer } from 'conductor/BaseContainer';\nimport ReactDOM from 'react-dom';\nimport { BehaviorSubject } from 'rxjs/internal/BehaviorSubject';\nimport { CartItem } from 'checkout/modules/cart/types';\nimport { requestContext } from 'conductor/contexts';\nimport { DependencyMap } from 'shared/config/DependencyMap';\nimport { getTotalQuantity } from 'checkout/modules/cart/selectors';\n\nexport class CartIndicatorContainer extends BaseContainer {\n\n  static tagName = 'cart-indicator-container';\n\n  cartStream?: BehaviorSubject<CartItem[]>;\n\n  onConnected() {\n    this.cartStream = requestContext<DependencyMap, 'cartStream'>(this, 'cartStream');\n    if (this.cartStream) {\n      this.subscribeTo(this.cartStream);\n    }\n  }\n\n  render() {\n    if (!this.cartStream) {\n      return;\n    }\n    const totalQuantity = getTotalQuantity(this.cartStream.getValue());\n    ReactDOM.render(\n      <div>Basket: {totalQuantity} item(s)</div>,\n      this,\n    );\n  }\n}\ncustomElements.define(CartIndicatorContainer.tagName, CartIndicatorContainer);\n","import React from 'react';\nimport { Product } from 'product/modules/product/types';\nimport { AddToCartContainer } from 'checkout/containers/AddToCartContainer';\nimport { CartIndicatorContainer } from 'checkout/containers/CartIndicatorContainer';\n\ninterface ProductDetailProps {\n  product: Product | undefined;\n  variantSku: string;\n}\n\nexport default class ProductDetail extends React.Component<ProductDetailProps> {\n\n  getVariant() {\n    if (!this.props.product) {\n      return;\n    }\n    return this.props.product.variants.find(v => v.sku === this.props.variantSku);\n  }\n\n  render() {\n    const { props } = this;\n    if (!props.product) {\n      return <h1>Product not found</h1>\n    }\n    const variant = this.getVariant();\n    return (\n      <div>\n        <h1>The Model Store</h1>\n        <h2>{props.product.name}</h2>\n        <CartIndicatorContainer.tagName />\n        {(variant) && (\n          <React.Fragment>\n            <h3>{variant.name}</h3>\n            <AddToCartContainer.tagName\n              data-sku={variant.sku}\n              data-price={variant.price}\n            />\n          </React.Fragment>\n        )}\n      </div>\n    );\n  }\n}\n"],"sourceRoot":""}